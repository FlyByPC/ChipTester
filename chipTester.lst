MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
                      00002 #include <P16F887.INC>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F887 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00789         LIST
                      00003 #include "PrintMacros.inc"
                      00001 PrintL  macro   Param1
                      00002 ;Print Literal (ASCII)
                      00003         movlw   Param1
                      00004         movwf   Output
                      00005         call    WrLCD
                      00006         endm
                      00007         
                      00008 PrintF  macro   Param1
                      00009 ;Print File (ASCII)
                      00010         movf    Param1,w
                      00011         movwf   Output
                      00012         call    WrLCD
                      00013         endm
                      00014 
                      00015 PrintFH macro   Param1
                      00016 ;Print File (Hex, Low4) 
                      00017         movf    Param1,w
                      00018         call    HexASCII
                      00019         movwf   Output
                      00020         call    WrLCD
                      00021         endm
                      00022 
                      00023 PrintFHL        macro   Param1
                      00024 ;Print File (Hex, Low4) 
                      00025         movf    Param1,w
                      00026         call    HexASCII
                      00027         movwf   Output
                      00028         call    WrLCD
                      00029         endm
                      00030 
                      00031 PrintFHH        macro   Param1
                      00032 ;Print File (Hex, High4) 
                      00033         swapf   Param1,w
                      00034         call    HexASCII
                      00035         movwf   Output
                      00036         call    WrLCD
                      00037         endm
                      00004 #include "TestVectorMacro.inc"
                      00001 TestVector macro        CTRIS, DTRIS, COUT, DOUT, CEXPECTED, DEXPECTED
                      00002 
                      00003         ;Copy the given literals into the variable locations
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004         movlw   CTRIS
                      00005         movwf   LastCT
                      00006 
                      00007         movlw   DTRIS
                      00008         movwf   LastDT
                      00009 
                      00010         movlw   COUT
                      00011         movwf   LastCO
                      00012 
                      00013         movlw   DOUT
                      00014         movwf   LastDO
                      00015 
                      00016         movlw   CEXPECTED
                      00017         movwf   CEXP
                      00018 
                      00019         movlw   DEXPECTED
                      00020         movwf   DEXP
                      00021 
                      00022 
                      00023         ;Run the test
                      00024         call    RunTest
                      00025 
                      00026 
                      00027         endm
                      00028 
                      00005 
                      00006         cblock 0x20
Warning[210]: Extra ","
  00000020            00007         Delay1, Delay2, Delay3, Output, 
  00000024            00008         LastCO, LastDO, LastCI, LastDI, LastCT, LastDT, CEXP, DEXP
  0000002C            00009         FailFlag
                      00010         endc
                      00011 
                      00012 
0000                  00013         org 0x00
                      00014         
0000   20D6           00015         call    Set16F887
0001   1683 1303      00016         banksel TRISA
0003   30FF           00017         movlw   0xFF
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0004   0085           00018         movwf   TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0186           00019         clrf    TRISB
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0006   0087           00020         movwf   TRISC
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0007   0088           00021         movwf   TRISD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   0189           00022         clrf    TRISE
0009   1283 1303      00023         banksel 0x00
                      00024         
                      00025 
000B   21DA           00026         call    SetLCD
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00027 
                      00028         
                      00029         ;Run test vectors: CTRIS, DTRIS, COUT, DOUT, CEXPECTED, DEXPECTED
                      00030 
                      00031         ;        ----------------------------
                      00032         ;       | 5V  D5  D4  D3  D2  D1  D0 |
                      00033         ;       |(1 1) 0   0   1   0   0   1 |
                      00034         ;       |                            |
                      00035         ;       |  0   0   1   0   0   1(1 1)|
                      00036         ;       | C0  C1  C2  C3  C4  C5  0V |
                      00037         ;        ----------------------------
                      00038 
000C                  00039 Loop:
                      00040 
                      00041 ;       TestVector 0xE4, 0xC9, 0x00, 0x00, 0x00, 0x00   ;00 00 00 00 --> 0 0 0 0
                      00042 ;       TestVector 0xE4, 0xC9, 0x12, 0x12, 0x36, 0x1B   ;01 01 01 01 --> 1 1 1 1
                      00043 ;       TestVector 0xE4, 0xC9, 0x09, 0x24, 0x2D, 0x2D   ;10 10 10 10 --> 1 1 1 1
                      00044         TestVector 0xE4, 0xC9, 0x1B, 0x36, 0x1B, 0x36   ;11 11 11 11 --> 0 0 0 0
                          M 
                          M         ;Copy the given literals into the variable locations
000C   30E4               M         movlw   0xE4
000D   00A8               M         movwf   LastCT
                          M 
000E   30C9               M         movlw   0xC9
000F   00A9               M         movwf   LastDT
                          M 
0010   301B               M         movlw   0x1B
0011   00A4               M         movwf   LastCO
                          M 
0012   3036               M         movlw   0x36
0013   00A5               M         movwf   LastDO
                          M 
0014   301B               M         movlw   0x1B
0015   00AA               M         movwf   CEXP
                          M 
0016   3036               M         movlw   0x36
0017   00AB               M         movwf   DEXP
                          M 
                          M 
                          M         ;Run the test
0018   203A               M         call    RunTest
                          M 
                          M 
                      00045 
0019   280C           00046         goto    Loop    
                      00047         
                      00048 
001A                  00049 Pass:
001A   21ED           00050         call    Cls
                      00051         PrintL  'P'
                          M ;Print Literal (ASCII)
001B   3050               M         movlw   'P'
001C   00A3               M         movwf   Output
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001D   21D0               M         call    WrLCD
                      00052         PrintL  'A'
                          M ;Print Literal (ASCII)
001E   3041               M         movlw   'A'
001F   00A3               M         movwf   Output
0020   21D0               M         call    WrLCD
                      00053         PrintL  'S'
                          M ;Print Literal (ASCII)
0021   3053               M         movlw   'S'
0022   00A3               M         movwf   Output
0023   21D0               M         call    WrLCD
                      00054         PrintL  'S'
                          M ;Print Literal (ASCII)
0024   3053               M         movlw   'S'
0025   00A3               M         movwf   Output
0026   21D0               M         call    WrLCD
0027   205F           00055         call    PrintTestResults
                      00056         ;Wait for a short while
0028   2141           00057         call    Delay_50ms
                      00058 
0029   0008           00059         return
                      00060 
002A                  00061 Fail:
002A   21ED           00062         call    Cls
                      00063         PrintL  'F'
                          M ;Print Literal (ASCII)
002B   3046               M         movlw   'F'
002C   00A3               M         movwf   Output
002D   21D0               M         call    WrLCD
                      00064         PrintL  'A'
                          M ;Print Literal (ASCII)
002E   3041               M         movlw   'A'
002F   00A3               M         movwf   Output
0030   21D0               M         call    WrLCD
                      00065         PrintL  'I'
                          M ;Print Literal (ASCII)
0031   3049               M         movlw   'I'
0032   00A3               M         movwf   Output
0033   21D0               M         call    WrLCD
                      00066         PrintL  'L'
                          M ;Print Literal (ASCII)
0034   304C               M         movlw   'L'
0035   00A3               M         movwf   Output
0036   21D0               M         call    WrLCD
0037   205F           00067         call    PrintTestResults
                      00068         ;Wait for a while
0038   2176           00069         call    Delay_1s
0039   0008           00070         return
                      00071 
                      00072 
003A                  00073 RunTest:
                      00074         ;Set up the TRIS ports
003A   0828           00075         movf    LastCT,w
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003B   1683 1303      00076         banksel TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
003D   0087           00077         movwf   TRISC
003E   1283 1303      00078         banksel 0x00
0040   0829           00079         movf    LastDT,w
0041   1683 1303      00080         banksel TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0043   0088           00081         movwf   TRISD
0044   1283 1303      00082         banksel 0x00
                      00083 
                      00084         ;Set up the outputs
0046   0824           00085         movf    LastCO, w
0047   0087           00086         movwf   PORTC
0048   0825           00087         movf    LastDO, w
0049   0088           00088         movwf   PORTD
                      00089 
                      00090 
                      00091         ;Record the results
004A   0807           00092         movf    PORTC, w
004B   00A6           00093         movwf   LastCI
004C   0808           00094         movf    PORTD, w
004D   00A7           00095         movwf   LastDI
                      00096 
                      00097 
                      00098         ;Clear the result.
004E   01AC           00099         clrf    FailFlag
                      00100 
                      00101         ;Check to see if C results match expected
004F   0826           00102         movf    LastCI, w
0050   393F           00103         andlw   0x3F            ;Strip out the high two bits
0051   062A           00104         xorwf   CEXP, w
0052   04AC           00105         iorwf   FailFlag, f
                      00106 
                      00107 
                      00108         ;Check to see if D results match expected
0053   0827           00109         movf    LastDI, w
0054   393F           00110         andlw   0x3F            ;Strip out the high two bits
0055   062B           00111         xorwf   DEXP, w
0056   04AC           00112         iorwf   FailFlag, f 
                      00113 
                      00114 
                      00115         ;Clear the screen
0057   21ED           00116         call    Cls
                      00117 
                      00118 
                      00119         ;Call Pass or Fail routine
0058   08AC           00120         movf    FailFlag, f
0059   1D03           00121         btfss   STATUS, Z
005A   202A           00122         call    Fail
005B   08AC           00123         movf    FailFlag, f
005C   1903           00124         btfsc   STATUS, Z
005D   201A           00125         call    Pass
                      00126 
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

005E   0008           00127         return
                      00128 
                      00129 
005F                  00130 PrintTestResults:
                      00131         ;Print out CTRIS, DTRIS, COUT, DOUT in hex
                      00132         PrintL  ' '
                          M ;Print Literal (ASCII)
005F   3020               M         movlw   ' '
0060   00A3               M         movwf   Output
0061   21D0               M         call    WrLCD
                      00133         PrintFHH        LastCT
                          M ;Print File (Hex, High4) 
0062   0E28               M         swapf   LastCT,w
0063   20C3               M         call    HexASCII
0064   00A3               M         movwf   Output
0065   21D0               M         call    WrLCD
                      00134         PrintFHL        LastCT
                          M ;Print File (Hex, Low4) 
0066   0828               M         movf    LastCT,w
0067   20C3               M         call    HexASCII
0068   00A3               M         movwf   Output
0069   21D0               M         call    WrLCD
                      00135         PrintL  ' '
                          M ;Print Literal (ASCII)
006A   3020               M         movlw   ' '
006B   00A3               M         movwf   Output
006C   21D0               M         call    WrLCD
                      00136         PrintFHH        LastDT
                          M ;Print File (Hex, High4) 
006D   0E29               M         swapf   LastDT,w
006E   20C3               M         call    HexASCII
006F   00A3               M         movwf   Output
0070   21D0               M         call    WrLCD
                      00137         PrintFHL        LastDT
                          M ;Print File (Hex, Low4) 
0071   0829               M         movf    LastDT,w
0072   20C3               M         call    HexASCII
0073   00A3               M         movwf   Output
0074   21D0               M         call    WrLCD
                      00138         PrintL  ' '
                          M ;Print Literal (ASCII)
0075   3020               M         movlw   ' '
0076   00A3               M         movwf   Output
0077   21D0               M         call    WrLCD
                      00139         PrintFHH        LastCO
                          M ;Print File (Hex, High4) 
0078   0E24               M         swapf   LastCO,w
0079   20C3               M         call    HexASCII
007A   00A3               M         movwf   Output
007B   21D0               M         call    WrLCD
                      00140         PrintFHL        LastCO
                          M ;Print File (Hex, Low4) 
007C   0824               M         movf    LastCO,w
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007D   20C3               M         call    HexASCII
007E   00A3               M         movwf   Output
007F   21D0               M         call    WrLCD
                      00141         PrintL  ' '
                          M ;Print Literal (ASCII)
0080   3020               M         movlw   ' '
0081   00A3               M         movwf   Output
0082   21D0               M         call    WrLCD
                      00142         PrintFHH        LastDO
                          M ;Print File (Hex, High4) 
0083   0E25               M         swapf   LastDO,w
0084   20C3               M         call    HexASCII
0085   00A3               M         movwf   Output
0086   21D0               M         call    WrLCD
                      00143         PrintFHL        LastDO
                          M ;Print File (Hex, Low4) 
0087   0825               M         movf    LastDO,w
0088   20C3               M         call    HexASCII
0089   00A3               M         movwf   Output
008A   21D0               M         call    WrLCD
                      00144 
                      00145         ;Go to LCD line 2
008B   3040           00146         movlw   0x40
008C   00A3           00147         movwf   Output
008D   21F6           00148         call    LCDGoto
                      00149 
                      00150         ;Print out CEXP, DEXP, CIN, DIN, FailFlag
                      00151         PrintFHH        CEXP
                          M ;Print File (Hex, High4) 
008E   0E2A               M         swapf   CEXP,w
008F   20C3               M         call    HexASCII
0090   00A3               M         movwf   Output
0091   21D0               M         call    WrLCD
                      00152         PrintFHL        CEXP
                          M ;Print File (Hex, Low4) 
0092   082A               M         movf    CEXP,w
0093   20C3               M         call    HexASCII
0094   00A3               M         movwf   Output
0095   21D0               M         call    WrLCD
                      00153         PrintL  ' '
                          M ;Print Literal (ASCII)
0096   3020               M         movlw   ' '
0097   00A3               M         movwf   Output
0098   21D0               M         call    WrLCD
                      00154         PrintFHH        DEXP
                          M ;Print File (Hex, High4) 
0099   0E2B               M         swapf   DEXP,w
009A   20C3               M         call    HexASCII
009B   00A3               M         movwf   Output
009C   21D0               M         call    WrLCD
                      00155         PrintFHL        DEXP
                          M ;Print File (Hex, Low4) 
009D   082B               M         movf    DEXP,w
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

009E   20C3               M         call    HexASCII
009F   00A3               M         movwf   Output
00A0   21D0               M         call    WrLCD
                      00156         PrintL  ' '
                          M ;Print Literal (ASCII)
00A1   3020               M         movlw   ' '
00A2   00A3               M         movwf   Output
00A3   21D0               M         call    WrLCD
                      00157         PrintFHH        LastCI
                          M ;Print File (Hex, High4) 
00A4   0E26               M         swapf   LastCI,w
00A5   20C3               M         call    HexASCII
00A6   00A3               M         movwf   Output
00A7   21D0               M         call    WrLCD
                      00158         PrintFHL        LastCI
                          M ;Print File (Hex, Low4) 
00A8   0826               M         movf    LastCI,w
00A9   20C3               M         call    HexASCII
00AA   00A3               M         movwf   Output
00AB   21D0               M         call    WrLCD
                      00159         PrintL  ' '
                          M ;Print Literal (ASCII)
00AC   3020               M         movlw   ' '
00AD   00A3               M         movwf   Output
00AE   21D0               M         call    WrLCD
                      00160         PrintFHH        LastDI
                          M ;Print File (Hex, High4) 
00AF   0E27               M         swapf   LastDI,w
00B0   20C3               M         call    HexASCII
00B1   00A3               M         movwf   Output
00B2   21D0               M         call    WrLCD
                      00161         PrintFHL        LastDI
                          M ;Print File (Hex, Low4) 
00B3   0827               M         movf    LastDI,w
00B4   20C3               M         call    HexASCII
00B5   00A3               M         movwf   Output
00B6   21D0               M         call    WrLCD
                      00162         PrintL  ' '
                          M ;Print Literal (ASCII)
00B7   3020               M         movlw   ' '
00B8   00A3               M         movwf   Output
00B9   21D0               M         call    WrLCD
                      00163         PrintFHH        FailFlag
                          M ;Print File (Hex, High4) 
00BA   0E2C               M         swapf   FailFlag,w
00BB   20C3               M         call    HexASCII
00BC   00A3               M         movwf   Output
00BD   21D0               M         call    WrLCD
                      00164         PrintFHL        FailFlag
                          M ;Print File (Hex, Low4) 
00BE   082C               M         movf    FailFlag,w
00BF   20C3               M         call    HexASCII
00C0   00A3               M         movwf   Output
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C1   21D0               M         call    WrLCD
                      00165 
00C2   0008           00166         return
                      00167 
                      00168         
                      00169 #include "HexASCII.inc"
00C3                  00001 HexASCII:                       ;Takes 4-bit value in W and returns ASCII code
                      00002 ;---------------------------------------------------------------------          
00C3   390F           00003                 andlw   0x0F    ;Make *sure* it's really a 4-bit value!
00C4   0782           00004                 addwf   PCL,f   
00C5   3430 3431 3432 00005                 dt              "0123456789ABCDEF"
       3433 3434 3435 
       3436 3437 3438 
       3439 3441 3442 
       3443 3444 3445 
       3446 
00D5   0008           00006                 return
                      00007 
                      00170 #include "16F887_setup.inc"
                      00001 ;PIC16F887 initialization code
                      00002 ;(sets up all ports as digital I/O, with 8MHz internal oscillator)
                      00003 ;
                      00004 ;Copyleft 2008, M. Eric Carr / Paleotechnologist.Net
                      00005 ;(You are free to use this under the Creative Commons license,
                      00006 ; for any purposes including commercial use, as long as this header
                      00007 ; is left intact or attribution is otherwise given.)
                      00008 ;----------------------------------------------------------------
                      00009 
00D6                  00010 Set16F887:
                      00011 
00D6   1683 1303      00012         banksel OPTION_REG
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D8   1281           00013         bcf     OPTION_REG,5    ;Timer0 transition on Fosc/4, not 
                      00014                                 ;T0CKI pin
                      00015         ;INTCON is OK as-is
                      00016 
                      00017         ;PIE1 is OK as-is
                      00018 
                      00019         ;PIE2 is OK as-is
                      00020 
                      00021         ;PIR1 and PIR2 provide status info and are OK as-is
                      00022 
                      00023         ;PCON is OK as-is (control BOREN through config word)
                      00024 
00D9   1683 1703      00025         banksel ANSEL
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DB   0188           00026         clrf    ANSEL           ;All pins set to digital I/O
                      00027 
00DC   1683 1703      00028         banksel ANSELH
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DE   0189           00029         clrf    ANSELH          ;These pins as digital I/O also
                      00030 
00DF   1683 1303      00031         banksel OSCCON
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E1   3071           00032         movlw   0x71            ;Internal oscillator / 8MHz
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E2   008F           00033         movwf   OSCCON
                      00034 
                      00035         ;T1CON is OK as-is
                      00036 
                      00037         ;T2CON is OK as-is
                      00038 
                      00039         ;CM1CON0 should be OK as-is (possible issue with bits 0-2?)
                      00040 
                      00041         ;CM2CON0 should be OK as-is (possible issue with bits 0-2?)
                      00042 
                      00043         ;CM2CON1 is OK as-is
                      00044 
                      00045         ;SRCON should be OK as-is
                      00046 
                      00047         ;VRCON is OK as-is
                      00048 
                      00049         ;ADCON0 is OK as-is
                      00050 
                      00051         ;ADCON1 is OK as-is
                      00052         
                      00053         ;CCP1CON should be OK as-is
                      00054 
                      00055         ;CCP2CON should be OK as-is
                      00056 
00E3   1283 1303      00057         banksel 0x00
                      00058 
00E5   0008           00059         return
                      00060 
                      00171 #include "delay_8.inc"
                      00001 ;=============================================================
                      00002 ;                                                            ;
                      00003 ; Delay_8.inc                                                  ;
                      00004 ;                                                            ;
                      00005 ; Library of delay routines for 8-bit PIC microcontrollers,  ;
                      00006 ; calibrated to 8MHz clock speed.                            ;
                      00007 ; (accurate to the exact number of clock cycles,             ;
                      00008 ; including the call/return overhead.)                       ;
                      00009 ;                                                            ;
                      00010 ; Copyleft 2008: M. Eric Carr / Intellectualism.Org          ;
                      00011 ;                                                            ;
                      00012 ; You are free to re-use this code in any open-source        ;
                      00013 ; application, or to use it for private use, as long         ;
                      00014 ; as this header remains unmodified.                         ;
                      00015 ;                                                            ;
                      00016 ; If you find this code useful, I would appreciate an        ;
                      00017 ; email at eric@intellectualism.org . Thanks!                ;
                      00018 ;                                                            ;
                      00019 ;=============================================================
                      00020 
                      00021 ; Usage: 
                      00022 ; ------
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00023 ; Call these routines to implement a delay of
                      00024 ; the specified amount of time. For instance, to
                      00025 ; implement a 20-microsecond delay, use the following:
                      00026 ;
                      00027 ;      call       Delay_20us
                      00028 ;
                      00029 ; (Combine these times to produce any desired delay.)
                      00030 ;
                      00031 ;
                      00032 ; Optimizations: 
                      00033 ; --------------
                      00034 ; These routines were written with the following priorities:
                      00035 ; (1) Each delay routine, including call overhead, shall
                      00036 ;     be accurate to the exact clock cycle (assuming a
                      00037 ;     perfectly accurate system clock.)
                      00038 ; (2) Subroutines shall use no more than one call stack level.
                      00039 ; (3) Variable usage should be minimized
                      00040 ; (4) Code size should be minimized while maintaining readability
                      00041 ; (5) Subroutines are standalone and shall have no dependencies,
                      00042 ;     other than the delay variables.
                      00043 ;
                      00044 ;
                      00045 ; Delay times available at 8MHz*
                      00046 ; ------------------------------
                      00047 ; 2us / 5us
                      00048 ; 10us / 20us / 50us
                      00049 ; 100us / 200us / 500us
                      00050 ; 1ms / 2ms / 5ms
                      00051 ; 10ms / 20ms / 50ms
                      00052 ; 100ms / 200ms / 500ms
                      00053 ; 1s / 2s / 5s
                      00054 ; 10s / 20s
                      00055 ;
                      00056 ;
                      00057 ; Quirks:
                      00058 ; -------
                      00059 ; These routines don't know about (and don't care about)
                      00060 ; interrupts. If they're interrupted, YMMV.
                      00061 ;
                      00062 ; * (1us timing -- two instructions -- is less than the call/
                      00063 ;    return overhead. This should be handled with inline code.)
                      00064 ; * 20s is the largest delay implemented, since it is near
                      00065 ;   the limit of three nested loops. Larger delays are of course
                      00066 ;   possible, but I had to stop somewhere.
                      00067 
                      00068 ;=======================================================
                      00069 
                      00070 
                      00071 
                      00072 ;Local variables, for delay subroutine library use
                      00073 ;(Not true protected local/private variables, since
                      00074 ; this doesn't exist in PIC16 assembly, but hopefully
                      00075 ; these memory locations are not used elsewhere...)
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00076 
                      00077 ;       cblock
                      00078 ;       Delay1, Delay2, Delay3
                      00079 ;       endc
                      00080 
                      00081 
                      00082 ;Delay_1us  **IMPOSSIBLE @ 2MIPS; USE GOTO $+1 or NOP/NOP INSTEAD**
                      00083 ;                       **A macro is NOT provided since this is dangerous
                      00084 ;                         if CALLed carelessly. Better to let it fail at
                      00085 ;                         assembly time. **
                      00086 
                      00087 
00E6                  00088 Delay_2us:                              ;2usec delay @ 8MHz (4 cycles)
00E6   0008           00089                 return                          
                      00090 
00E7                  00091 Delay_5us:                              ;5usec delay @ 8MHz (10 cycles)
00E7   28E8           00092                 goto $+1
00E8   28E9           00093                 goto $+1
00E9   28EA           00094                 goto $+1
00EA   0008           00095                 return          
                      00096 
00EB                  00097 Delay_10us:                             ;10usec delay @ 8MHz (20 cycles)
00EB   3005           00098                 movlw   0x05
00EC   00A0           00099                 movwf   Delay1
00ED   0BA0           00100                 decfsz  Delay1,f
00EE   28ED           00101                 goto    $-1
00EF   0008           00102                 return
                      00103 
                      00104 
00F0                  00105 Delay_20us:                             ;20usec delay @ 8MHz (40 cycles)
00F0   300B           00106                 movlw   0x0B
00F1   00A0           00107                 movwf   Delay1
00F2   0BA0           00108                 decfsz  Delay1,f
00F3   28F2           00109                 goto    $-1
00F4   28F5           00110                 goto    $+1
00F5   0008           00111                 return
                      00112 
                      00113 
                      00114 
00F6                  00115 Delay_50us:                             ;50usec delay @ 8MHz (100 cycles)
00F6   301F           00116                 movlw   0x1F
00F7   00A0           00117                 movwf   Delay1
00F8   0BA0           00118                 decfsz  Delay1,f
00F9   28F8           00119                 goto    $-1
00FA   28FB           00120                 goto    $+1
00FB   0008           00121                 return
                      00122 
                      00123 
00FC                  00124 Delay_100us:                    ;100usec delay @ 8MHz (200 cycles)
00FC   3041           00125                 movlw   0x41
00FD   00A0           00126                 movwf   Delay1
00FE   0BA0           00127                 decfsz  Delay1,f
00FF   28FE           00128                 goto    $-1
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0100   0008           00129                 return
                      00130 
                      00131 
0101                  00132 Delay_200us:                    ;200usec delay @ 8MHz (400 cycles)
0101   3083           00133                 movlw   0x83
0102   00A0           00134                 movwf   Delay1
0103   0BA0           00135                 decfsz  Delay1,f
0104   2903           00136                 goto    $-1
0105   2906           00137                 goto    $+1
0106   0008           00138                 return
                      00139 
                      00140 
0107                  00141 Delay_500us:                    ;500usec delay @ 8MHz (1000 cycles)
0107   3005           00142                 movlw   0x05
0108   00A1           00143                 movwf   Delay2
0109   3041           00144                 movlw   0x41
010A   00A0           00145                 movwf   Delay1
010B   0BA0           00146                 decfsz  Delay1,f
010C   290B           00147                 goto    $-1
010D   0BA1           00148                 decfsz  Delay2,f
010E   2909           00149                 goto    $-5
010F   0008           00150                 return
                      00151 
                      00152 
0110                  00153 Delay_1ms:                      ;1msec delay @ 8MHz (2000 cycles)
0110   3003           00154                 movlw   0x03
0111   00A1           00155                 movwf   Delay2
0112   30DC           00156                 movlw   0xDC
0113   00A0           00157                 movwf   Delay1
0114   0BA0           00158                 decfsz  Delay1,f
0115   2914           00159                 goto    $-1
0116   0BA1           00160                 decfsz  Delay2,f
0117   2912           00161                 goto    $-5
0118   2919           00162                 goto    $+1
0119   0000           00163                 nop
011A   0008           00164                 return
                      00165 
                      00166 
                      00167 
011B                  00168 Delay_2ms:                      ;2msec delay @ 8MHz (4000 cycles)
011B   302F           00169                 movlw   0x2F
011C   00A1           00170                 movwf   Delay2
011D   301B           00171                 movlw   0x1B
011E   00A0           00172                 movwf   Delay1
011F   0BA0           00173                 decfsz  Delay1,f
0120   291F           00174                 goto    $-1
0121   0BA1           00175                 decfsz  Delay2,f
0122   291D           00176                 goto    $-5
0123   0008           00177                 return
                      00178 
                      00179 
                      00180 
0124                  00181 Delay_5ms:                      ;5msec delay @ 8MHz (10k cycles)
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0124   3013           00182                 movlw   0x13            ;0x95
0125   00A1           00183                 movwf   Delay2
0126   30AE           00184                 movlw   0xAE            ;0x15
0127   00A0           00185                 movwf   Delay1
0128   0BA0           00186                 decfsz  Delay1,f
0129   2928           00187                 goto    $-1
012A   0BA1           00188                 decfsz  Delay2,f
012B   2926           00189                 goto    $-5
012C   0000           00190                 nop
012D   0008           00191                 return
                      00192 
                      00193 
                      00194 
012E                  00195 Delay_10ms:                     ;10msec delay @ 8MHz (20k cycles) --OK
012E   301A           00196                 movlw   0x1A
012F   00A1           00197                 movwf   Delay2
0130   30FF           00198                 movlw   0xFF
0131   00A0           00199                 movwf   Delay1
0132   0BA0           00200                 decfsz  Delay1,f
0133   2932           00201                 goto    $-1
0134   0BA1           00202                 decfsz  Delay2,f
0135   2930           00203                 goto    $-5
0136   0000           00204                 nop
0137   0008           00205                 return
                      00206 
                      00207 
0138                  00208 Delay_20ms:                     ;20msec delay @ 8MHz (40k cycles)
0138   305F           00209                 movlw   0x5f
0139   00A1           00210                 movwf   Delay2
013A   308B           00211                 movlw   0x8b
013B   00A0           00212                 movwf   Delay1
013C   0BA0           00213                 decfsz  Delay1,f
013D   293C           00214                 goto    $-1
013E   0BA1           00215                 decfsz  Delay2,f
013F   293A           00216                 goto    $-5
0140   0008           00217                 return
                      00218 
                      00219 
                      00220 
0141                  00221 Delay_50ms:                     ;50msec delay @ 8MHz (100k cycles)
0141   30C6           00222                 movlw   0xc6
0142   00A1           00223                 movwf   Delay2
0143   30A7           00224                 movlw   0xa7
0144   00A0           00225                 movwf   Delay1
0145   0BA0           00226                 decfsz  Delay1,f
0146   2945           00227                 goto    $-1
0147   0BA1           00228                 decfsz  Delay2,f
0148   2943           00229                 goto    $-5
0149   294A           00230                 goto    $+1
014A   294B           00231                 goto    $+1
014B   0000           00232                 nop
014C   0008           00233                 return
                      00234 
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00235 
                      00236 
                      00237 
                      00238 
014D                  00239 Delay_100ms:                    ;100msec delay @ 8MHz (200k cycles)
014D   30C7           00240                 movlw   0xC7
014E   00A2           00241                 movwf   Delay3
014F   308F           00242                 movlw   0x8F
0150   00A1           00243                 movwf   Delay2
0151   3001           00244                 movlw   0x01
0152   00A0           00245                 movwf   Delay1
0153   0BA0           00246                 decfsz  Delay1,f
0154   2953           00247                 goto    $-1
0155   0BA1           00248                 decfsz  Delay2,f
0156   2951           00249                 goto    $-5
0157   0BA2           00250                 decfsz  Delay3,f
0158   294F           00251                 goto    $-9
0159   0008           00252                 return
                      00253 
                      00254 
015A                  00255 Delay_200ms:                    ;200msec delay @ 8MHz (400k cycles)
015A   300E           00256                 movlw   0x0E
015B   00A2           00257                 movwf   Delay3
015C   3031           00258                 movlw   0x31
015D   00A1           00259                 movwf   Delay2
015E   30C1           00260                 movlw   0xc1
015F   00A0           00261                 movwf   Delay1
0160   0BA0           00262                 decfsz  Delay1,f
0161   2960           00263                 goto    $-1
0162   0BA1           00264                 decfsz  Delay2,f
0163   295E           00265                 goto    $-5
0164   0BA2           00266                 decfsz  Delay3,f
0165   295C           00267                 goto    $-9
0166   0000           00268                 nop
0167   0008           00269                 return
                      00270 
                      00271 
                      00272 
0168                  00273 Delay_500ms:                    ;500msec delay @ 8MHz (1M cycles)
0168   302E           00274                 movlw   0x2E
0169   00A2           00275                 movwf   Delay3
016A   30BD           00276                 movlw   0xBD
016B   00A1           00277                 movwf   Delay2
016C   3025           00278                 movlw   0x25
016D   00A0           00279                 movwf   Delay1
016E   0BA0           00280                 decfsz  Delay1,f
016F   296E           00281                 goto    $-1
0170   0BA1           00282                 decfsz  Delay2,f
0171   296C           00283                 goto    $-5
0172   0BA2           00284                 decfsz  Delay3,f
0173   296A           00285                 goto    $-9
0174   0000           00286                 nop
0175   0008           00287                 return
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00288 
                      00289 
0176                  00290 Delay_1s:                       ;1sec delay @ 8MHz (2M cycles)
0176   30A7           00291                 movlw   0xA7
0177   00A2           00292                 movwf   Delay3
0178   30A4           00293                 movlw   0xA4
0179   00A1           00294                 movwf   Delay2
017A   3017           00295                 movlw   0x17
017B   00A0           00296                 movwf   Delay1
017C   0BA0           00297                 decfsz  Delay1,f
017D   297C           00298                 goto    $-1
017E   0BA1           00299                 decfsz  Delay2,f
017F   297A           00300                 goto    $-5
0180   0BA2           00301                 decfsz  Delay3,f
0181   2978           00302                 goto    $-9
0182   2983           00303                 goto    $+1
0183   0000           00304                 nop
0184   0008           00305                 return
                      00306 
0185                  00307 Delay_2s:                       ;2sec delay @ 8MHz (4M cycles)
0185   30FE           00308                 movlw   0xFE
0186   00A2           00309                 movwf   Delay3
0187   30F6           00310                 movlw   0xF6
0188   00A1           00311                 movwf   Delay2
0189   3014           00312                 movlw   0x14
018A   00A0           00313                 movwf   Delay1
018B   0BA0           00314                 decfsz  Delay1,f
018C   298B           00315                 goto    $-1
018D   0BA1           00316                 decfsz  Delay2,f
018E   2989           00317                 goto    $-5
018F   0BA2           00318                 decfsz  Delay3,f
0190   2987           00319                 goto    $-9
0191   2992           00320                 goto    $+1
0192   0000           00321                 nop
0193   0008           00322                 return
                      00323 
                      00324 
0194                  00325 Delay_5s:                       ;5sec delay @ 8MHz (10M cycles)
0194   30B9           00326                 movlw   0xB9
0195   00A2           00327                 movwf   Delay3
0196   30E6           00328                 movlw   0xE6
0197   00A1           00329                 movwf   Delay2
0198   304D           00330                 movlw   0x4D
0199   00A0           00331                 movwf   Delay1
019A   0BA0           00332                 decfsz  Delay1,f
019B   299A           00333                 goto    $-1
019C   0BA1           00334                 decfsz  Delay2,f
019D   2998           00335                 goto    $-5
019E   0BA2           00336                 decfsz  Delay3,f
019F   2996           00337                 goto    $-9
01A0   29A1           00338                 goto    $+1
01A1   29A2           00339                 goto    $+1
01A2   0000           00340                 nop
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01A3   0008           00341                 return
                      00342 
01A4                  00343 Delay_10s:                      ;10sec delay @ 8MHz (20M cycles)
01A4   30AB           00344                 movlw   0xAB
01A5   00A2           00345                 movwf   Delay3
01A6   30CF           00346                 movlw   0xCF
01A7   00A1           00347                 movwf   Delay2
01A8   30BB           00348                 movlw   0xBB
01A9   00A0           00349                 movwf   Delay1
01AA   0BA0           00350                 decfsz  Delay1,f
01AB   29AA           00351                 goto    $-1
01AC   0BA1           00352                 decfsz  Delay2,f
01AD   29A8           00353                 goto    $-5
01AE   0BA2           00354                 decfsz  Delay3,f
01AF   29A6           00355                 goto    $-9
01B0   29B1           00356                 goto    $+1
01B1   29B2           00357                 goto    $+1
01B2   29B3           00358                 goto    $+1
01B3   0008           00359                 return
                      00360 
01B4                  00361 Delay_20s:                      ;20sec delay @ 8MHz (40M cycles)
01B4   30F1           00362                 movlw   0xF1
01B5   00A2           00363                 movwf   Delay3
01B6   30DD           00364                 movlw   0xDD
01B7   00A1           00365                 movwf   Delay2
01B8   30F9           00366                 movlw   0xF9
01B9   00A0           00367                 movwf   Delay1
01BA   0BA0           00368                 decfsz  Delay1,f
01BB   29BA           00369                 goto    $-1
01BC   0BA1           00370                 decfsz  Delay2,f
01BD   29B8           00371                 goto    $-5
01BE   0BA2           00372                 decfsz  Delay3,f
01BF   29B6           00373                 goto    $-9
                      00374 
01C0   3006           00375                 movlw   0x06
01C1   00A0           00376                 movwf   Delay1
01C2   0BA0           00377                 decfsz  Delay1,f
01C3   29C2           00378                 goto    $-1
                      00379 
01C4   0000           00380                 nop
                      00381 
01C5   0008           00382                 return
                      00172 #include "LCD.inc"
                      00001 ;Write to the LCD Control register
01C6   3004           00002 WrLCC   movlw   0x04
01C7   0089           00003                 movwf   PORTE
01C8   0823           00004                 movf    Output,w
01C9   0086           00005                 movwf   PORTB
01CA   3000           00006                 movlw   0x00
01CB   0089           00007                 movwf   PORTE
01CC   20F6           00008                 Call    Delay_50us
01CD   3004           00009                 movlw   0x04
01CE   0089           00010                 movwf   PORTE
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00011                 
01CF   0008           00012                 return
                      00013 
                      00014 
                      00015 ;Write to the LCD Data register
01D0   3005           00016 WrLCD   movlw   0x05
01D1   0089           00017                 movwf   PORTE
01D2   0823           00018                 movf    Output,w
01D3   0086           00019                 movwf   PORTB
01D4   3001           00020                 movlw   0x01
01D5   0089           00021                 movwf   PORTE
01D6   20F6           00022                 Call    Delay_50us      
01D7   3005           00023                 movlw   0x05
01D8   0089           00024                 movwf   PORTE
01D9   0008           00025                 return
                      00026 
                      00027 
                      00028 
                      00029 
                      00030 ;Set up the LCD (send the init string)
                      00031 ;------------------------------
01DA                  00032 SetLCD  
01DA   214D           00033                 call    Delay_100ms     ;Wait for LCD to init
01DB   3038           00034                 movlw   0x38            ;2-line, 5x7, 8-bit mode
01DC   00A3           00035                 movwf   Output
01DD   21C6           00036                 call    WrLCC
01DE   300C           00037                 movlw   0x0C            ;(was 0x0C. Disp on/Cursor on/blink)
01DF   00A3           00038                 movwf   Output
01E0   21C6           00039                 call    WrLCC
01E1   3001           00040                 movlw   0x01            ;Clear the display
01E2   00A3           00041                 movwf   Output
01E3   21C6           00042                 call    WrLCC
01E4   3006           00043                 movlw   0x06            ;Set shift-right behavior
01E5   00A3           00044                 movwf   Output
01E6   21C6           00045                 call    WrLCC
01E7   3002           00046                 movlw   0x02            ;Return home
01E8   00A3           00047                 movwf   Output
01E9   21C6           00048                 call    WrLCC
01EA   211B           00049                 call    Delay_2ms
01EB   0008           00050                 return
01EC   29EC           00051                 goto    $               ;GUARD
                      00052 
                      00053 
01ED                  00054 Cls
01ED   3001           00055                 movlw   0x01            ;Clear the display
01EE   00A3           00056                 movwf   Output
01EF   21C6           00057                 call    WrLCC
01F0   211B           00058                 call    Delay_2ms       ;Per spec sheet
01F1   0008           00059                 return
                      00060 
01F2                  00061 QuickCls        ;Like Cls, but with no delay. Use only when
                      00062                         ;certain 2ms or more will pass before the LCD
                      00063                         ;is accessed again.
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F2   3001           00064                 movlw   0x01            ;Clear the display
01F3   00A3           00065                 movwf   Output
01F4   21C6           00066                 call    WrLCC
01F5   0008           00067                 return
                      00068 
                      00069 
01F6                  00070 LCDGoto ;GOTO location in variable Output:
                      00071                 ;0x00 to 0x27 in first line (0x00 - 0x0F visible),
                      00072                 ;0x40 to 0x67 in second line (0x40 - 0x4F visible).
01F6   17A3           00073                 bsf             Output, 7       ;Set high bit of Output
01F7   29C6           00074                 goto    WrLCC           ;WrLCC will handle the return
                      00075                                                         ;(this saves a stack level)
                      00076 
                      00173         
                      00174         end
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2H                            0000001C
CCPR2L                            0000001B
CEXP                              0000002A
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CKE                               00000006
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CSRC                              00000007
Cls                               000001ED
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DEXP                              0000002B
D_A                               00000005
D_NOT_A                           00000005
Delay1                            00000020
Delay2                            00000021
Delay3                            00000022
Delay_100ms                       0000014D
Delay_100us                       000000FC
Delay_10ms                        0000012E
Delay_10s                         000001A4
Delay_10us                        000000EB
Delay_1ms                         00000110
Delay_1s                          00000176
Delay_200ms                       0000015A
Delay_200us                       00000101
Delay_20ms                        00000138
Delay_20s                         000001B4
Delay_20us                        000000F0
Delay_2ms                         0000011B
Delay_2s                          00000185
Delay_2us                         000000E6
Delay_500ms                       00000168
Delay_500us                       00000107
Delay_50ms                        00000141
Delay_50us                        000000F6
Delay_5ms                         00000124
Delay_5s                          00000194
Delay_5us                         000000E7
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
Fail                              0000002A
FailFlag                          0000002C
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HTS                               00000002
HexASCII                          000000C3
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
LCDGoto                           000001F6
LTS                               00000001
LastCI                            00000026
LastCO                            00000024
LastCT                            00000028
LastDI                            00000027
LastDO                            00000025
LastDT                            00000029
Loop                              0000000C
MC1OUT                            00000007
MC2OUT                            00000006
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
Output                            00000023
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
PULSS                             00000003
PWM1CON                           0000009B
Pass                              0000001A
PrintF                            
PrintFH                           
PrintFHH                          
PrintFHL                          
PrintL                            
PrintTestResults                  0000005F
QuickCls                          000001F2
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_W                               00000002
RunTest                           0000003A
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
SWDTEN                            00000000
SYNC                              00000004
Set16F887                         000000D6
SetLCD                            000001DA
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
TestVector                        
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
WrLCC                             000001C6
WrLCD                             000001D0
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXX--------

All other memory blocks unused.

Program Memory Words Used:   504
Program Memory Words Free:  7688


MPASM  5.42                    CHIPTESTER.ASM   4-5-2013  16:45:23         PAGE 31





Errors   :     0
Warnings :     1 reported,     0 suppressed
Messages :    11 reported,     0 suppressed

